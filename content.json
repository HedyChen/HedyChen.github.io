{"meta":{"title":"Hongxia Chen","subtitle":"","description":"","author":"Hongxia Chen","url":"http://hedy18883863839.gitee.io/blog","root":"blog/"},"pages":[{"title":"关于我","date":"2021-04-08T07:40:08.000Z","updated":"2021-04-08T08:24:18.815Z","comments":true,"path":"about/index.html","permalink":"http://hedy18883863839.gitee.io/blog/about/index.html","excerpt":"","text":"你好，陌生人，欢迎访问我的博客。 介绍一名平平无奇的打工人，喜欢美食，喜欢追剧，喜欢一切简单的事物。之前也搭建过一个博客，中间经历过些乱七八糟的事情，后来没有持续更新，现在想找个记录点滴的工具，所以有了你看到的这个博客。余生漫长，愿生活美满！ 联系我 QQ&nbsp;&nbsp;&nbsp;&nbsp;: 1287834564 Email&nbsp;: 1287834564@qq.com GitHub: https://github.com/HedyChen"}],"posts":[{"title":"BFC","slug":"BFC","date":"2021-04-08T07:23:26.627Z","updated":"2021-04-08T07:25:42.288Z","comments":true,"path":"2021/04/08/BFC/","link":"","permalink":"http://hedy18883863839.gitee.io/blog/2021/04/08/BFC/","excerpt":"在实际经验中，经常会遇到这样一些情况，给某个元素设置了margin-top，margin-bottom实际运行却看不到效果，往往是因为发生了边距重叠。 什么是外边距重叠？边距重叠（也叫边距合并）是指：两个或多个盒子（可能相邻或嵌套）的垂直方向的相邻外边界重合在一起，形成一个外边界的情况。","text":"在实际经验中，经常会遇到这样一些情况，给某个元素设置了margin-top，margin-bottom实际运行却看不到效果，往往是因为发生了边距重叠。 什么是外边距重叠？边距重叠（也叫边距合并）是指：两个或多个盒子（可能相邻或嵌套）的垂直方向的相邻外边界重合在一起，形成一个外边界的情况。 看个栗子&lt;style type=\"text/css\"&gt; *{ padding: 0; margin: 0; } #box{ background: #FBD46D; } #child{ height: 300px; margin-top: 20px; background: #5DF856; } &lt;/style&gt; &lt;div id=\"box\"&gt; &lt;div id=\"child\"&gt;&lt;/div&gt; &lt;/div&gt; 在这里，为#child这个div设置margin-top: 20px,如果不考虑边距重叠，#box这个div高度应该被撑到320px，从页面距离顶部0px的位置显示，并且上面的20px应该显示成#FBD46D，而在浏览器中真实的显示效果却不是这样，下面为真实显示效果。 可以看到#box这个div并没有像我们预期的那样，高度被撑到310px，而是里层#child子div高度，这是因为#boxf父元素与#child子元素发生了边距重叠。父子元素和兄弟元素都可能发生边距重叠，可以参考w3school的说明：http://www.w3school.com.cn/css/css_margin_collapsing.asp 怎么解决边距重叠？解决边距重叠常用的方式是：使用BFC！ 什么是BFCBFC（Block Formatting Contexts）译为块级格式化上下文，规定了将文档显示在视觉媒体上的机制。 BFC的原理是什么 BFC元素内的各个子元素垂直方向边距会发生重叠 BFC元素不会与浮动元素的box发生重叠 计算BFC高度的时候浮动元素也会参与计算 BFC是页面上的一个独立的容器，容器的子元素不会在布局上影响到容器外面的元素，容器外面的元素也不会在布局上影响到容器里面的元素 如何创建BFC flot值不为null position的值不为static和relative display的值为inline-block,table,table-cell,able-caption,flex overflow的值不为visible例如：上面的栗子中为#box这个div设置overflow:hidden创建一个BFC，结果如下图所示","categories":[],"tags":[]},{"title":"CSS盒模型","slug":"css盒模型","date":"2021-04-08T07:11:43.527Z","updated":"2021-04-08T07:27:30.457Z","comments":true,"path":"2021/04/08/css盒模型/","link":"","permalink":"http://hedy18883863839.gitee.io/blog/2021/04/08/css%E7%9B%92%E6%A8%A1%E5%9E%8B/","excerpt":"","text":"css盒模型是html+css中最核心的基础知识，那么什么是盒模型？css盒子模型又称框模型 (Box Model) ，包含了元素内容（content）、内边距（padding）、边框（border）、外边距（margin）几个要素。如图： 标准盒模型和IE盒模型盒模型有标准盒模型和IE盒模型两种模式，两者的区别在于对元素的width和height的计算方式不同： 在标准盒模型中：盒子的大小就是element的width和height；而在IE盒模型中：盒子的宽=element的width+(padding-left)+(padding-right)+(border-left)+(border-right);盒子的高=element的height+(padding-top)+(padding-bottom)+(border-top)+(border-bottom) 设置box-sizing属性为 content-box可以将一个盒模型设置成标准盒模型，设置box-sizing属性为border-box可以将一个盒模型设置成IE盒模型；浏览器中默认使用的事标准盒模型。 如何通过JS获得盒模型的宽度和高度dom.style.width/height可以通过style属性获取盒子宽度高度，上面写的dom代表页面上的元素（如：通过document.getElementById获取到的元素，下面的dom代表同样的意思），利用元素的style属性是可读可写的，也就是说可以通过style属性获取到某个元素的宽高，通过设置style属性宽高的值也可以设置元素的宽高。我们都知道在给元素写样式的时候有几种方式，可以直接写在标签上面，在标签内设置style属性，通常称为内联样式；也可以在页面上使用&lt;style&gt;标签来为页面上的元素添加样式，这种也被人称为内嵌样式；还有一种就是写一个专门的css文件，用来放页面样式代码，这种常被称为外联样式。但是值得一提的是，通过style属性只能获取到内联样式上面设置的属性值，通过style属性获取到的值是没有经过浏览器渲染的值。 运行结果如下： dom.currentStyle.width/heightcurrentStyle属性完美解决了上面style的两个问题，它可以获取到通过任何方式设置的元素的样式，获取到的样式的值是经过浏览器渲染后的，最终显示的值；但是，它也存在一个问题，这个属性只在IE上能正确运行。 window.getComputedStyle()window.getComputedStyle(“元素”,”伪类”)可以获取到指定元素的所有属性和样式，其返回值是一个对象。想要获取不同的属性值，可直接在window.getComputedStyle()的返回对象上取得相应值。这种方式获得的值也是浏览器渲染后的值，前面说过，这个方法的返回值是一个对象，其中包括元素的所有样式，如果某个样式没有在样式中显示设置，也可以获得浏览器为该元素设置的默认的值，也即是浏览器渲染后显示的样式。这种方式的缺点是不支持IE8及以下版本的IE，在其他的浏览器基本上都支持采用这种方式获取页面渲染后的样式。 运行结果如下 dom.getBoundingClientRect().width/heightgetBoundingClientRect()方法可以获得元素相对于视口的左上角位置而言的距离，如下图所示： 其返回值为对象，包括top,right,bottom,left,width,height,x,y几个属性，可以分别获得这些属性的值，这些值都是经过浏览器渲染后的结果。其中top,right,bottom,left可以兼容所有浏览器，而width,height在IE8及以下版本不能正确获得。 运行结果如下：","categories":[],"tags":[]}],"categories":[],"tags":[]}